CREATE DATABASE test;
USE  test;

CREATE TABLE tb_student(
sid INT(6) primary key auto_increment,   #设置自增约束  #在定义列时建立主键
sname VARCHAR(2) not null ,  #非空
sex SET('male','fmale') default 'male'  #定义默认值
);

drop table tb_student;
insert into tb_student(sid) values(1);
select * from tb_student;


CREATE TABLE tb_course(
cid VARCHAR(3),
cname VARCHAR(3) unique  #列级唯一约束
);

CREATE TABLE tb_course(
cid VARCHAR(3) primary key,
cname VARCHAR(3),
unique(cname)  #表级的唯一约束
);


#删除tb_course表
drop table tb_course;


CREATE TABLE tb_grade(
sid INT(6),
cid VARCHAR(3),
grade int(2),
#定义联合主键，需要在所有列定义完毕后去定义



primary key(sid,cid),
foreign key (cid) REFERENCES tb_course(cid), #外键建立
foreign key (sid) REFERENCES tb_student(sid) on update CASCADE  #建立外键的同时级联修改
);

insert into tb_course value('D01','数学'),('D02','英语')

insert into tb_grade(sid,cid,grade) value(201,'D01',90);

#1.你外键列一定对应着主表的主键列。
#2.外键列和主键列数据类型必须一样。

update tb_student set sid=203 where sid=201


insert into tb_grade(sid,cid) values(202,'C02')

drop table tb_grade;


#查看数据表结构
desc tb_grade;
show create table tb_grade;

#修改student的表名为stu
alter table tb_student rename stu

#course表中的cname数据类型改为char(5)，并且该列非空
alter table tb_course modify cname char(5) not null;
desc tb_course;

#在course表增加一个credit（学分)列，放在课程号和课程名之间
alter table tb_course add credit int after cid;

#删除grade表的主键
alter table tb_grade drop primary key
#删除grade表中外键
alter table tb_grade drop FOREIGN key tb_grade_ibfk_2 #外键名
#增加grade表的主键
alter table tb_grade add primary key(sid,cid);


#删除course表中cid
alter table tb_course drop cid